[gd_scene load_steps=14 format=3 uid="uid://cl38p40inih5l"]

[ext_resource type="Texture2D" uid="uid://d3av2fnfdvtiw" path="res://levels/level_1/Fox.png" id="1_16o3k"]
[ext_resource type="Texture2D" uid="uid://4tr2br2jd857" path="res://levels/level_1/Trekant mikael full.svg" id="1_qk0sb"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_qxoe4"]

[sub_resource type="Sky" id="Sky_7hwgl"]
sky_material = SubResource("ProceduralSkyMaterial_qxoe4")

[sub_resource type="Environment" id="Environment_1nx0j"]
background_mode = 2
sky = SubResource("Sky_7hwgl")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mnm23"]

[sub_resource type="GDScript" id="GDScript_m4bpr"]
script/source = "extends CharacterBody3D


@export var MAX_SPEED = 5.0
@export var JUMP_VELOCITY = 9.0
@export var GRAVITY_SCALE = 1.5
@export var MOVEMENT_SPEED = 3.0
@export var breaking_speed = 15.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * GRAVITY_SCALE * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = clamp(velocity.x + direction.x * MOVEMENT_SPEED, -MAX_SPEED, MAX_SPEED)
	elif velocity.x != 0:
		velocity.x = move_toward(velocity.x, 0.0, breaking_speed * delta)

	move_and_slide()
"

[sub_resource type="GDScript" id="GDScript_7wh2q"]
script/source = "extends Camera3D

@export var dynamic_offset = Vector2(2.0, 2.0)
@export var camera_speed = 1.0
var cam_offset : Vector3 

# Called when the node enters the scene tree for the first time.
func _ready():
	cam_offset = position # Preserve camera position from editor

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	adjust_camera_horizontally(delta)
	adjust_camera_vertically(delta)
	

#region Move camera according to velocity of character

# Camera is being nudged using interpolations
# Linear interpolation is being used together with ease
# We slow down the linear interpolation steps depending on how close 
# the current position is to the target position using transition_speed_factor
# 
# tf = 1 -> full speed
# tf = 0.1 -> very slow
# by using ease we substract from tf=1 so that we have a faster transition when far away (close to 1)
# and a slower transition when close to the target location (closer to 0) 
func adjust_camera_horizontally(delta):
	var desired_offset := Vector2(cam_offset.x, 0.0)
	if get_parent().velocity.x > 0:
		desired_offset.x += dynamic_offset.x + cam_offset.x
	elif get_parent().velocity.x < 0:
		desired_offset.x -= dynamic_offset.x + cam_offset.x
		
	var transition_speed_factor = 1
	if desired_offset.x != 0:
		transition_speed_factor -= ease(position.x/desired_offset.x, 4.8)
	position.x = lerpf(position.x, desired_offset.x, transition_speed_factor * camera_speed * delta)
	
func adjust_camera_vertically(delta):
	var desired_offset := Vector2(0.0, cam_offset.y)
	if get_parent().velocity.y > 0:
		desired_offset.y += dynamic_offset.y
	elif get_parent().velocity.y < 0:
		desired_offset.y -= dynamic_offset.y
		
	var transition_speed_factor = 1
	if desired_offset.y != 0:
		transition_speed_factor -= ease(position.y/desired_offset.y, 4.8)
		
	position.y = lerpf(position.y, desired_offset.y, transition_speed_factor * camera_speed * delta)
	
#endregion
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_rk1c8"]
radius = 0.332599
height = 1.03856

[sub_resource type="GDScript" id="GDScript_ealeq"]
script/source = "extends Area3D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass



func _on_body_entered(body: Node3D) -> void:
	get_tree().reload_current_scene()
"

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_b7imc"]

[sub_resource type="GDScript" id="GDScript_wn147"]
resource_name = "wind"
script/source = "extends Area3D
@export var wind = Vector2()

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass


func _on_body_entered(body: Node3D) -> void:
	var player := body as CharacterBody3D
	if not player:
		return
"

[sub_resource type="BoxShape3D" id="BoxShape3D_vdrqs"]
size = Vector3(30.6429, 5.7124, 9.26752)

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_1nx0j")

[node name="Stage" type="CSGCombiner3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.200553, -0.354923, -0.0233431)
use_collision = true

[node name="CSGBox3D" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.01891, 0, 0)
material_override = SubResource("ShaderMaterial_mnm23")
size = Vector3(11.8312, 0.515137, 1)

[node name="CSGBox3D" type="CSGBox3D" parent="Stage/CSGBox3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.59059, 2.47646, 0)
size = Vector3(3.80533, 0.515137, 1)

[node name="CSGBox3D" type="CSGBox3D" parent="Stage/CSGBox3D/CSGBox3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.43509, -2.27509, 0)
size = Vector3(3.80533, 0.515137, 1)

[node name="CSGBox3D2" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.7976, 0.464846, 0)

[node name="CSGBox3D3" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.914, 0.464846, 0)

[node name="CSGBox3D4" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.5841, 1.10812, 0)

[node name="CSGBox3D5" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 18.2677, 1.96018, 0)

[node name="CSGBox3D6" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 19.8722, 4.24721, 0)

[node name="CSGBox3D7" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.4955, 6.90543, 0)

[node name="CSGBox3D8" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.0768, 9.15654, 0)

[node name="CSGBox3D9" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 18.3331, 10.9046, 0)

[node name="CSGBox3D10" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20.6132, 12.3677, 0)

[node name="CSGBox3D11" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 29.6337, 13.106, 0)
size = Vector3(12.7412, 1, 1)

[node name="CSGBox3D12" type="CSGBox3D" parent="Stage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 45.6814, 2.19872, 0)
size = Vector3(12.7412, 1, 1)

[node name="CSGBox3D14" type="CSGBox3D" parent="Stage"]
transform = Transform3D(0.959131, -0.282961, 0, 0.282961, 0.959131, 0, 0, 0, 1, 66.3887, 6.56894, 0)
size = Vector3(30.53, 1, 1)

[node name="CSGBox3D13" type="CSGBox3D" parent="Stage"]
transform = Transform3D(0.962734, -0.270449, 0, 0.270449, 0.962734, 0, 0, 0, 1, 36.995, 7.32066, -0.304516)
size = Vector3(1.8867, 11.3821, 1)

[node name="Player" type="CharacterBody3D" parent="."]
transform = Transform3D(1.00116, 0, 0, 0, 1.00116, 0, 0, 0, 1.00116, 0, 0.450518, 0)
axis_lock_linear_z = true
axis_lock_angular_z = true
script = SubResource("GDScript_m4bpr")

[node name="Camera3D" type="Camera3D" parent="Player"]
transform = Transform3D(0.998841, 0, 0, 0, 0.983667, 0.173447, 0, -0.173447, 0.983667, 0, 2.113, 6.005)
script = SubResource("GDScript_7wh2q")
dynamic_offset = Vector2(1, 0)

[node name="Sprite3D" type="Sprite3D" parent="Player"]
transform = Transform3D(0.25, 0, 0, 0, 0.25, 0, 0, 0, 0.25, 0, 0, 0)
gi_mode = 2
pixel_size = 0.005
shaded = true
texture = ExtResource("1_qk0sb")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
shape = SubResource("CapsuleShape3D_rk1c8")

[node name="SpotLight3D" type="SpotLight3D" parent="."]
transform = Transform3D(0.586368, -0.344918, 0.732942, -0.0893604, 0.871751, 0.481731, -0.805101, -0.347967, 0.480345, 1.8125, 1.33789, 0.702466)
light_energy = 5.676
spot_angle = 22.6523

[node name="Deathbox" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4, 0)
script = SubResource("GDScript_ealeq")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Deathbox"]
shape = SubResource("WorldBoundaryShape3D_b7imc")

[node name="Fox" type="Sprite3D" parent="."]
transform = Transform3D(0.34459, 0, 0, 0, 0.34459, 0, 0, 0, 1, 28.6208, 15.7878, -6.24117)
texture = ExtResource("1_16o3k")

[node name="Wind" type="Area3D" parent="."]
transform = Transform3D(0.967144, 0.254231, 0, -0.254231, 0.967144, 0, 0, 0, 1, 2.19092, 9.22535, 0)
gravity_space_override = 1
gravity_point_center = Vector3(-1, 0, 0)
gravity_direction = Vector3(-1, 0, 0)
script = SubResource("GDScript_wn147")
wind = Vector2(-10, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Wind"]
transform = Transform3D(0.958968, -0.283513, 0, 0.283513, 0.958968, 0, 0, 0, 1, 6.74301, -5.16876, -0.343842)
shape = SubResource("BoxShape3D_vdrqs")

[connection signal="body_entered" from="Deathbox" to="Deathbox" method="_on_body_entered"]
[connection signal="body_entered" from="Wind" to="Wind" method="_on_body_entered"]
